name: Auto Update Submodule on PR

# 'dev' 브랜치를 대상으로 하는 PR이 생성되거나,
# 해당 PR에 새로운 커밋이 추가될 때마다 워크플로우를 실행합니다.
on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - dev

jobs:
  auto-update-submodule:
    runs-on: ubuntu-latest
    # 워크플로우가 PR 브랜치에 코드를 푸시할 수 있도록 권한을 부여합니다.
    permissions:
      contents: write

    steps:
      # 1. PR을 보낸 브랜치의 코드를 가져옵니다.
      - name: Checkout PR Branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          submodules: 'recursive' # 서브모듈도 함께 가져옵니다.
          # ⭐️ 핵심 수정: fetch-depth를 0으로 설정하여 전체 히스토리를 가져옵니다.
          # 이렇게 하면 서브모듈이 모든 브랜치 정보를 인식할 수 있게 됩니다.
          fetch-depth: 0
          token: ${{ secrets.SUB_TOKEN  }}

      # 2. 서브모듈을 최신 버전으로 업데이트하고, 변경이 있다면 커밋합니다.
      - name: Update Submodule and Commit
        run: |
          # Git 커밋 작성자를 PR 요청자로 설정합니다.
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
#
#          # ⭐️ 핵심 1: 모든 서브모듈이 자신의 원격 저장소 정보를 가져오도록 합니다. (fetch)
#          # 이 명령어가 없으면 서브모듈이 추적할 브랜치를 찾지 못하는 에러가 발생합니다.
#          git submodule foreach git fetch
#
#          # ⭐️ 핵심 2: .gitmodules에 설정된 브랜치의 최신 커밋으로 서브모듈을 업데이트합니다.
#          git submodule update --remote
#
#          # 서브모듈에 변경사항이 없다면 여기서 작업을 성공적으로 마칩니다.
#          if [[ -z $(git status -s) ]]; then
#            echo "✅ Submodule is already up-to-date."
#            exit 0
#          fi
#
#          # 변경사항이 있다면 커밋하고 PR 브랜치에 푸시하여 PR을 업데이트합니다.
#          echo "⚠️ Submodule outdated. Committing new version..."
#          git add . # 변경된 모든 서브모듈을 스테이징합니다.
#          git commit -m "chore(submodule): Sync submodules to latest"
#          git push

          # 이제 이 단계는 필요 없습니다. checkout 시점에 이미 모든 정보가 있습니다.
          # git submodule foreach git fetch

           git submodule update --remote
           
           if [[ -z $(git status -s) ]]; then
           echo "✅ Submodule is already up-to-date."
           exit 0
           fi
           
           echo "⚠️ Submodule outdated. Committing new version..."
           git add .
           git commit -m "chore(submodule): Sync submodules to latest"
           git push