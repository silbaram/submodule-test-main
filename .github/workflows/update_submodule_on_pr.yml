name: Auto Update Submodule on PR

# 'dev' 브랜치를 대상으로 하는 PR이 생성되거나,
# 해당 PR에 새로운 커밋이 추가될 때마다 워크플로우를 실행합니다.
on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - dev

jobs:
  auto-update-submodule:
    runs-on: ubuntu-latest
    # 워크플로우가 PR 브랜치에 코드를 푸시할 수 있도록 권한을 부여합니다.
    permissions:
      contents: write

    steps:
      # 1. PR을 보낸 브랜치의 코드를 가져옵니다.
      - name: Checkout PR Branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          submodules: 'recursive' # 서브모듈도 함께 가져옵니다.
          # ⭐️ 핵심 수정: fetch-depth를 0으로 설정하여 전체 히스토리를 가져옵니다.
          # 이렇게 하면 서브모듈이 모든 브랜치 정보를 인식할 수 있게 됩니다.
          fetch-depth: 0
          token: ${{ secrets.SUB_TOKEN  }}

      # 2. 서브모듈을 최신 버전으로 업데이트하고, 변경이 있다면 커밋합니다.
      - name: Update Submodule and Commit
        run: |
          # Git 커밋 작성자를 PR 요청자로 설정합니다.
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"

          git submodule update --remote
          
          if [[ -z $(git status -s) ]]; then
            echo "✅ Submodule is already up-to-date."
            exit 0
          fi
          
          echo "⚠️ Submodule outdated. Committing new version..."
          git add .
          git commit -m "chore(submodule): Sync submodules to latest"
          git push